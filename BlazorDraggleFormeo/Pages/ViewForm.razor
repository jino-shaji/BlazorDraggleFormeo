@page "/viewForm/{formId?}"

@inject IJSRuntime JSRuntime;   
@inject IFormDesignerHttpRepository _formDesingerHttpRepository

<h3>View Form - @templateData.FormName</h3>
<hr/>

<div class="container">
    <div class="form-group row">  
        <label for="FormName" class="control-label col">Form Name- @templateData.FormName</label>  
    </div>
    <div class="form-group row">  
        <label for="TemplateName" class="control-label col">Type- @templateData.TemplateName</label>  
    </div>
</div>
<hr />
<div class="container p-5 form-design-container">
    <form class="formeo-wrap" id="formeo-wrap-render"></form>
</div>

@code {
    [Parameter]  
    public string formId { get; set; }  
    private FormDataTemplateViewModel templateData = new FormDataTemplateViewModel();

    protected override async Task OnInitializedAsync()
    {
        templateData = await _formDesingerHttpRepository.GetFormDataById(Convert.ToInt32(formId));
        if (templateData !=null)
        {
            await JSRuntime.InvokeVoidAsync("formDesigner.renderForm", templateData.TemplateData);
            await JSRuntime.InvokeVoidAsync("formDesigner.fillFormData", templateData.FormTemplateData);
        }
    }
}
